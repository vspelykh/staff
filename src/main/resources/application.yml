server:
  port: ${SERVER_PORT}


spring:
  application:
    name: staff-app
  profiles:
    default: test

  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10

  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT_ID}
            client-secret: ${SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT_SECRET}
            scope: ${SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_SCOPE}
            authorization-grant-type: ${SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_AUTHORIZATION_GRANT_TYPE}
        provider:
          keycloak:
            issuer-uri: ${SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI}

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    generate-ddl: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
        connection:
          release_mode: after_transaction
        log:
          sql: true
        format_sql: true
        c3p0:
          min_size: 5
          max_size: 20

  cache:
    type: redis

  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379
      password:
      timeout: 60000
      lettuce:
        pool:
          max-active: 10
          max-idle: 5
          min-idle: 2
          time-between-eviction-runs: 60000

  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration

keycloak:
  jwt:
    jwk-set-uri: ${KEYCLOAK_JWT_JWK_SET_URI}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,threaddump, prometheus
  endpoint:
    prometheus:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
        step: 10s


logging:
  level:
    org.springframework.web: INFO
    org.springframework.boot.actuate: DEBUG
