version: '3.8'

services:
  postgres_key:
    image: postgres:latest
    container_name: postgres_key
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres_key
    ports:
      - "5432:5432"
    volumes:
      - postgres_key:/var/lib/postgresql/datas
    networks:
      - app_network

  keycloak_web:
    image: quay.io/keycloak/keycloak:23.0.7
    container_name: keycloak_web
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres_key:5432/postgres_key
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: password
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    depends_on:
      - postgres_key
    ports:
      - "8080:8080"
    networks:
      - app_network

  postgres:
    image: postgres:latest
    container_name: staff_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: staff_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  redis:
    image: redis:latest
    container_name: staff_redis
    ports:
      - "6379:6379"
    networks:
      - app_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
    - /D/Andersen/staff/src/main/resources/metrics/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app_network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - app_network

  staff_app:
    image: staff-app:latest
    container_name: staff_app
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SERVER_PORT: 8900
      DB_URL: jdbc:postgresql://postgres:5432/staff_db
      DB_USER: postgres
      DB_PASSWORD: password
      REDIS_HOST: redis
#      SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT_ID: staff-client
#      SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT_SECRET: X1vA7kLpQ9z@34!JfFNm#ZkR2
#      SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_SCOPE: openid
#      SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_AUTHORIZATION_GRANT_TYPE: password
#      SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://localhost:8080/realms/staff-realm
      KEYCLOAK_JWT_JWK_SET_URI: http://keycloak_web/realms/staff-realm/protocol/openid-connect/certs
      SPRING_PROFILES_ACTIVE: test
      KEYCLOAK_HOST: keycloak_web
    ports:
      - "8900:8900"
    depends_on:
      - postgres
      - redis
      - keycloak_web
    networks:
      - app_network

volumes:
  postgres_key:
  postgres_data:

networks:
  app_network:
    driver: bridge
